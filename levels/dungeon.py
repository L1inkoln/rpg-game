from characters.base import ICharacter
from typing import Sequence
from items.potions import HealthPotion
from levels.level import Battle, Level, Skeleton


# ---–†–µ–∞–ª–∏–∑–∞—Ü–∏—è —É—Ä–æ–≤–Ω—è —Å –Ω–∞–≥—Ä–∞–¥–∞–º–∏ –ø—Ä–∏ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏---
class DungeonLevel(Level):
    def __init__(self) -> None:
        enemies = [Skeleton("–°–∫–µ–ª–µ—Ç 1"), Skeleton("–°–∫–µ–ª–µ—Ç 2")]
        super().__init__(name="–ü–æ–¥–∑–µ–º–µ–ª—å–µ", enemies=enemies)

    def start(self, heroes: Sequence[ICharacter]) -> None:
        print(f"üè∞ –í—ã –≤—Ö–æ–¥–∏—Ç–µ –≤ '{self.name}'...")
        print(f"üßü –ù–∞ –ø—É—Ç–∏ –≤—Å—Ç–∞—é—Ç {len(self.enemies)} –≤—Ä–∞–≥–æ–≤!\n")

        battle = Battle(heroes, self.enemies)
        battle.start()

        if all(enemy.health <= 0 for enemy in self.enemies):
            self.reward(heroes)
            self._complete()

    def reward(self, heroes: Sequence[ICharacter]) -> None:
        print("\nüéÅ –ù–∞–≥—Ä–∞–¥—ã –∑–∞ –ø–æ–±–µ–¥—É:")
        for hero in heroes:
            if hasattr(hero, "add_consumable"):
                hero.add_consumable(HealthPotion())
                print(f"{hero.name} –ø–æ–ª—É—á–∏–ª –ó–µ–ª—å–µ –∑–¥–æ—Ä–æ–≤—å—è!")
