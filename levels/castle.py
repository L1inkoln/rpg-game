from typing import Sequence
from characters.base import ICharacter
from items.potions import DamagePotion
from levels.level import Battle, DarkLord, Level


class CastleLevel(Level):
    def __init__(self) -> None:
        boss = DarkLord()
        super().__init__(name="–≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å: –ó–∞–º–æ–∫", enemies=[boss])

    def start(self, heroes: Sequence[ICharacter]) -> None:
        print(f"\n{'\033[91m'}‚ö†Ô∏è –≠–ö–°–¢–†–ò–ú–ê–õ–¨–ù–´–ô –£–†–û–í–ï–ù–¨: '{self.name}'!{'\033[0m'}")
        print(f"üè∞ –í –∑–∞–º–æ–∫ –∑–∞—à–ª–∏: {', '.join(hero.name for hero in heroes)} ...")
        print(f"üëë –ù–∞ —Ç—Ä–æ–Ω–µ —Å–∏–¥–∏—Ç –±–æ—Å—Å: {self.enemies[0].name} —Å –æ–≥–Ω–µ–Ω–Ω–æ–π –º–∞–≥–∏–µ–π!\n")

        battle = Battle(heroes, self.enemies)
        battle.start()

        if all(enemy.health <= 0 for enemy in self.enemies):
            self.reward(heroes)
            self._complete()

    def reward(self, heroes: Sequence[ICharacter]) -> None:
        print("\nüëë –ó–∞ –ø–æ–±–µ–¥—É –Ω–∞–¥ –±–æ—Å—Å–æ–º –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ —Ä–µ–¥–∫–∏–π –∞—Ä—Ç–µ—Ñ–∞–∫—Ç!")
        for hero in heroes:
            hero._add_consumable(DamagePotion())
